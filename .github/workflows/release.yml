name: release
on:
  # push:
  #   branches:
  #     - hickory-*
  workflow_dispatch:
    inputs:
      execute:
        description: --execute
        type: boolean
        default: false

      publish:
        description: publish
        type: boolean
        default: true

      release_level:
        description: level to release
        type: choice
        options:
          - none
          - major
          - minor
          - patch
          - release
          - rc
          - beta
          - alpha
        default: release

      dev_level:
        description: level to bump after release
        type: choice
        options:
          - none
          - major
          - minor
          - patch
          - release
          - rc
          - beta
          - alpha
        default: alpha

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}
      EXECUTE: "${{ inputs.execute && '--execute' || '' }}"

    steps:
      - name: checkout
        uses: actions/checkout@main

      - name: get home
        id: get-home
        run: 'echo "HOME=$(getent passwd "$USER" | cut -d: -f6)" >> $GITHUB_ENV'

      - name: cache cargo
        id: cache-cargo
        uses: actions/cache@main
        with:
          path: |
            ~/.cache/cargo
            ~/.cargo
            ~/.rustup
            ${{ github.workspace }}/target
          key: ${{ runner.os }}-cargo

      - name: install cargo-release
        id: install-cargo-release
        run: cargo install cargo-release --locked
        env:
          CARGO_TARGET_DIR: ${{ env.HOME }}/.cache/cargo/cargo-release

      - name: install nushell
        id: install-nu
        run: cargo install nu --locked
        env:
          CARGO_TARGET_DIR: ${{ env.HOME }}/.cache/cargo/nu

      - name: release version
        if: ${{ inputs.release_level != 'none' }}
        run: |
          cargo release version ${{ inputs.release_level }} ${{ env.EXECUTE }}
          cargo release hook

      - name: release version tag and push
        if: ${{ inputs.release_level != 'none' && inputs.execute }}
        run: |
          cargo release commit ${{ env.EXECUTE }}
          cargo release tag ${{ env.EXECUTE }}
          cargo release push ${{ env.EXECUTE }}

      - name: publish
        if: ${{ inputs.publish }}
        run: |
          cargo release publish ${{ env.EXECUTE }}

      - name: bump version
        if: ${{ inputs.dev_level != 'none' }}
        run: |
          cargo release version ${{ inputs.dev_level }} ${{ env.EXECUTE }}

      - name: bump version tag and push
        if: ${{ inputs.dev_level != 'none' && inputs.execute }}
        run: |
          cargo release commit ${{ env.EXECUTE }}
          cargo release push ${{ env.EXECUTE }}
